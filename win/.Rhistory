chooseCRANmirror()
q()
install.packages('Rserve')
install.packages('Rserve')
install.packages('ggplot2')
install.packages('devtools')
install.packages('RCurl')
install.packages('RJSONIO')
install.packages('jpeg')
install.packages('png')
install.packages('base64enc')
q()
install.packages('Rserve')
install.packages('ggplot2')
install.packages('devtools')
install.packages('RCurl')
install.packages('RJSONIO')
install.packages('jpeg')
install.packages('png')
install.packages('base64enc')
q()
install.packages('Rserve')
install.packages('ggplot2')
install.packages('devtools')
install.packages('RCurl')
install.packages('RJSONIO')
install.packages('jpeg')
install.packages('png')
install.packages('base64enc')
q()
installed.packages()
install.packages('library(scatterplot3d)')
with(mtcars, {
s3d <- scatterplot3d(disp, wt, mpg,        # x y and z axis
color="blue", pch=19,        # filled blue circles
type="h",                    # vertical lines to the x-y plane
main="3-D Scatterplot Example 3",
xlab="Displacement (cu. in.)",
ylab="Weight (lb/1000)",
zlab="Miles/(US) Gallon")
s3d.coords <- s3d$xyz.convert(disp, wt, mpg) # convert 3D coords to 2D projection
text(s3d.coords$x, s3d.coords$y,             # x and y coordinates
labels=row.names(mtcars),               # text to plot
cex=.5, pos=4)           # shrink text 50% and place to right of points)
})
install.packages('scatterplot3d')
q()
install.packages('scatterplot3d')
q()
install.packages('knitr', dependencies = TRUE)
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
a
a
summary(cars)
plot(cars)
library(party)
install.packages('party', dependencies = TRUE)
library(party)
liwc <- read.csv("liwc.csv", header = TRUE)
smi <- read.csv("smileys2.csv", header = TRUE)
liwc <- read.csv("liwc.csv", header = TRUE)
install.packages('ggplot2', dependencies = TRUE)
library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library("ggplot2")
library(ggplot2)
library(ggplot)
library(ggplot2)
install.packages("Rcpp")
library(ggplot2)
install.packages("forecast")
install.packages("fpp")
install.packages("xlsx")
rnorm
install.packages("KernSmooth")
load(KernSmooth)
library(KernSmooth)
install.packages('Rserve')
install.packages('ggplot2')
install.packages('devtools')
install.packages('RCurl')
install.packages('RJSONIO')
install.packages('jpeg')
install.packages('png')
install.packages('base64enc')
install.packages('roxygen2')
install.packages("dplyr")
install.packages("Rcpp")
install.packages("rbenchmark")
install.packages("inline")
install.packages("Runit")
library(Rcpp)
library(inline)
body <- '
NumericVector xx(x);
return wrap( std::accumulate( xx.begin(), xx.end(), 0.0));'
add <- cxxfunction(signature(x = "numeric"), body, plugin = "Rcpp")
library(Rcpp)
library(inline)
body <- '
NumericVector xx(x);
return wrap( std::accumulate( xx.begin(), xx.end(), 0.0));'
add <- cxxfunction(signature(x = "numeric"), body, plugin = "Rcpp")
x <- 1
y <- 2
res <- add(c(x,y))
res
setwd("Z:/Dropbox/R/c-r/win")
dyn.load("sequence_examples.dll")
.C("sumSeq", start = as.integer(10), size = as.integer(5),
sumVect = as.integer(rep(0, 5)))
.C("fiboSeq", size = as.integer(5),
sumVect = as.integer(rep(0, 5)))
.C("sumSeq", start = as.integer(10), size = as.integer(5),
sumVect = as.integer(rep(0, 5)))$sumVect
.C("fiboSeq", size = as.integer(5),
sumVect = as.integer(rep(0, 5)))$sumVect
library(Rcpp)
cppFunction('double foo(double x) { return std::sqrt(x); }')
foo(4)
foo(4.2)
install.packages("devtools")
devtools::use_rcpp()
